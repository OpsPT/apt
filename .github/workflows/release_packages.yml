name: Release packages
on:
  push:
    branches:
      - main
  workflow_run:
    workflows:
      - Daily auto-update packages
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up reprepro
      env: 
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        R2_URL: ${{ secrets.R2_URL }}
        R2_ACCESS_KEY: ${{ secrets.R2_ACCESS_KEY }}
        R2_SECRET_KEY: ${{ secrets.R2_SECRET_KEY }}
        R2_BUCKET: ${{ secrets.R2_BUCKET }}
      run: |
        sudo apt-get update
        sudo apt-get install -y reprepro gnupg2 wget s3fs
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq
        echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        echo -n "$R2_ACCESS_KEY:$R2_SECRET_KEY" > /tmp/r2_key
        chmod 600 /tmp/r2_key
        for dir in */
        do
          cd "${dir%/}/"
          archs=$(yq -r .archs[] opspt.vars.yml)
          codenames=$(yq -r .codenames[] opspt.vars.yml)
          version=$(tail -n 1 opspt.version)
          rm -rf dist
          make -f opspt.mk build_if_updated
          if [ -d "dist" ]; then
            cd dist
            mkdir conf
            mkdir s3mount
            s3fs -o passwd_file=/tmp/r2_key -o url=$R2_URL -o use_path_request_style -o endpoint=auto $R2_BUCKET s3mount/
            archs=$(tr "\n" " " <<< $archs) 
            rm -f conf/distributions
            for codename in $codenames; do
              cp ../opspt.distributions conf/opspt.distributions
              sed -i -e "s|%arch%|${archs}|g" -e "s/%codename%/${codename}/g" conf/opspt.distributions
              cat conf/opspt.distributions >> conf/distributions
              echo "" >> conf/distributions
            done
            reprepro export
            for codename in $codenames; do
              for arch in $archs; do
                reprepro --outdir ./s3mount includedeb "${codename}" "./${dir%/}_${codename}_${arch}_${version}.deb" 
              done
            done
            umount s3mount
            sed -i 's/BUILDED=FALSE/BUILDED=TRUE/g' ../opspt.version;
            cd ..
          fi
          cd ..
        done
        git remote set-url origin "https://$GH_TOKEN@github.com/opsPT/apt.git"
        git add .
        if [ -n "$(git status --porcelain)" ]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Update build statuses"
          git push
        fi
